//Алгоритм расчета расстояния от точки до прямой заданной двумя точками.
//В данном алгоритме будет использован класс Vector3 и метод координат.
using System.Numerics;

class Programm
{
  //Создаем функцию, которая возвращает растояние от точки до заданной прямой.
  public static float DistanceFromPoint(Vector3 a, Vector3 b, Vector3 m)
  {
    //Чтобы найти вектор прямой, надо вычесть из вектора конечной точки вектор начальной.
    //Инициализируем вектор ab - вектор прямой заданной двумя точками.
    Vector3 ab = new Vector3();
    ab = Vector3.Subtract(b, a);

    //Инициализируем вектор am - это вектор прямой от точки a до точки m.
    Vector3 am = new Vector3();
    am = Vector3.Subtract(m, a);

    //Расстояние(прямая) от точки до прямой - это высота параллелограмма, сторонами которого являются прямые ab и am.
    //Чтобы найти высоту, мы делим площадь параллелограмма на длину прямой заданной двумя точками.
    //Чтобы найти площадь этого параллелограмма, мы делаем векторное произведение векторов ab и am и находим его длину.
    Vector3 s = Vector3.Cross(ab, am);

    //Делим длину произведения векторов(площадь параллелограмма) на длину вектора прямой заданной двумя точками.
    //Получившийся результат - расстояние от точки до прямой.
    return s.Length() / ab.Length();
  }
  public static void Main()
  {
    //Инициализируем точки a и b которыми задана прямая.
    Vector3 a = new Vector3(1, 2, 3);
    Vector3 b = new Vector3(1, 14, 11);
    
    //Инициализируем точку от которой будем рассчитывать расстояние до прямой.
    Vector3 m = new Vector3(-4, 8, 7);

    //Выводим в терминал расстояние от точки до прямой с помощью ранее созданной функции.
    Console.WriteLine(DistanceFromPoint(a, b, m));
  }

}

